# Install, not upgrade
install
cmdline

# Install from a friendly mirror and add updates
url --url="http://mirror.rackspace.com/centos/7/os/x86_64"
#url --url=http://mirror.centos.org/centos-7/7/os/x86_64/
repo --name=base --baseurl=http://mirror.rackspace.com/centos/7/os/x86_64/
#repo --name=base --baseurl=http://mirror.centos.org/centos-7/7/os/x86_64/
repo --name=epel --baseurl=http://mirror.rackspace.com/epel/7/x86_64/

# Language and keyboard setup
lang en_US.UTF-8
keyboard us

# Configure DHCP networking w/optional IPv6, firewall on
network --onboot yes --device ens3 --bootproto dhcp --ipv6 auto --hostname localhost --activate
firewall --service=ssh

# Set timezone
timezone --utc Etc/UTC

# Authentication
rootpw --plaintext novaagentneedsunlockedrootaccountsowedeletepasswordinpost
authconfig --enableshadow --passalgo=sha512

# SELinux
selinux --permissive

# Services running at boot
services --enabled network,sshd,rc-local
services --disabled sendmail,NetworkManager

# Disable anything graphical
skipx
text
#graphical

# Setup the disk
zerombr
clearpart --all --initlabel
part / --fstype=ext4 --grow --asprimary
bootloader --location=mbr --boot-drive=sda --timeout=1 --append="root=/dev/sda1 console=ttyS4,115200n8 8250.nr_uarts=5 modprobe.blacklist=mei_me"

# Shutdown when the kickstart is done
shutdown

# Minimal package set
%packages --ignoremissing
@base
# lean install options
#%packages --excludedocs --nobase --ignoremissing
#@core
# leaving the rest below anyway
kernel
rsync
tar
wget
curl
iptables-services
# all below are required for cloud-init
cloud-init
cloud-utils
cloud-utils-growpart
yum-plugin-versionlock
epel-release
python-devel
python-requests
python-prettytable
#python-cheetah
PyYAML
net-tools
qemu-img
policycoreutils-python
pyserial
python-oauth2
python-jinja2
python-requests-oauthlib
rsyslog
python-pip
-selinux-policy-targeted
mdadm

%end

%post --log=/var/log/post_install.log

# update all
yum -y update

# setup systemd to boot to the right runlevel
echo -n "Setting default runlevel to multiuser text mode"
systemctl set-default multi-user.target

# If you want to remove rsyslog and just use journald, remove this!
echo -n "Disabling persistent journal"
rmdir /var/log/journal/ 

# this is installed by default but we don't need it in virt
#echo "Removing linux-firmware package."
#yum -C -y remove linux-firmware

# Non-firewalld-firewall
echo -n "Writing static firewall"
cat > /etc/sysconfig/iptables <<'EOF'
# Simple static firewall loaded by iptables.service. Replace
# this with your own custom rules, run lokkit, or switch to 
# shorewall or firewalld as your needs dictate.
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
-A INPUT -p icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -m conntrack --ctstate NEW -m tcp -p tcp --dport 22 -j ACCEPT
-A INPUT -j REJECT --reject-with icmp-host-prohibited
-A FORWARD -j REJECT --reject-with icmp-host-prohibited
COMMIT
EOF

echo -n "Getty fixes"
# although we want console output going to the serial console, we don't
# actually have the opportunity to login there. FIX.
# we don't really need to auto-spawn _any_ gettys.
sed -i '/^#NAutoVTs=.*/ a\
NAutoVTs=0' /etc/systemd/logind.conf

echo -n "Network fixes"
# initscripts don't like this file to be missing.
cat > /etc/sysconfig/network << EOF
NETWORKING=yes
NOZEROCONF=yes
EOF

# For cloud images, 'eth0' _is_ the predictable device name, since
# we don't want to be tied to specific virtual (!) hardware
ln -sf /dev/null /etc/udev/rules.d/80-net-name-slot.rules
ln -sf /dev/null /etc/udev/rules.d/75-persistent-net-generator.rules
ln -sf /dev/null /etc/udev/rules.d/70-persistent-net.rules

# simple eth0 config, again not hard-coded to the build hardware
#cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << EOF
#DEVICE="eth0"
#BOOTPROTO="static"
#ONBOOT="yes"
#TYPE="Ethernet"
#EOF

# generic localhost names
cat > /etc/hosts << EOF
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
EOF

# Because memory is scarce resource in most cloud/virt environments,
# and because this impedes forensics, we are differing from the Fedora
# default of having /tmp on tmpfs.
echo "Disabling tmpfs for /tmp."
/usr/bin/systemctl mask tmp.mount

# tmp tmp
mkdir /tmp/tmp
cd /tmp/tmp

# set some stuff
#echo 'net.ipv4.conf.eth0.arp_notify = 1' >> /etc/sysctl.conf
#echo 'vm.swappiness = 0' >> /etc/sysctl.conf

cat >> /etc/sysctl.conf <<'EOF'
net.ipv4.tcp_rmem = 4096 87380 33554432
net.ipv4.tcp_wmem = 4096 65536 33554432
net.core.rmem_max = 33554432
net.core.wmem_max = 33554432
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_timestamps = 1
net.ipv4.tcp_sack = 1
EOF

# teeth cloud-init
#wget http://98f7490b5235468aa0c1-f20868e4072493c909d50c027a960948.r72.cf2.rackcdn.com/cloud-init-0.7.5-14rackspace.x86_64.rpm
wget http://KICK_HOST/cloud-init/cloud-init-0.7.7-el7.rpm
rpm -Uvh --nodeps cloud*.rpm
yum versionlock add cloud-init
pip install --upgrade six
pip install --upgrade configobj

cat > /etc/cloud/cloud.cfg.d/10_rackspace.cfg <<'EOF'
disable_root: False
ssh_pwauth: False
ssh_deletekeys: False
resize_rootfs: noblock
manage_etc_hosts: localhost
growpart:
  mode: auto
  devices: ['/']
system_info:
  distro: rhel
  default_user:
    name: root
    lock_passwd: True
ssh_svcname: ssh
mounts:
 - [ ephemeral0, null ]
 
cloud_config_modules:
 - disk_setup
 - ssh-import-id
 - locale
 - set-passwords
 - package-update-upgrade-install
 - yum-add-repo
 - timezone
 - puppet
 - chef
 - salt-minion
 - mcollective
 - disable-ec2-metadata
 - runcmd
 - byobu
 
cloud_init_modules:
 - migrator
 - bootcmd
 - write-files
 - growpart
 - resizefs
 - set_hostname
 - update_hostname
 - update_etc_hosts
 - rsyslog
 - users-groups
 - ssh

EOF

# Work around cloud-init service not starting properly
#sed -i 's|Type=oneshot|Type=simple|g' /usr/lib/systemd/system/cloud-init.service
#sed -i 's|# Output needs to appear in instance console output|Restart=on-failure|g' /usr/lib/systemd/system/cloud-init.service

# Enable verbose logging in cloud-init
sed -i 's/ - \[ \*log_base, \*log_syslog ]/# - \[ \*log_base, \*log_syslog ]/g' /etc/cloud/cloud.cfg.d/05_logging.cfg

# force grub to use generic disk labels, bootloader above does not do this
cat >> /etc/sysconfig/grub <<'EOF'
GRUB_DISABLE_LINUX_UUID="true"
EOF
grub2-mkconfig

# another teeth specific
echo "bonding" >> /etc/modules
echo "8021q" >> /etc/modules

# more teeth console changes
cat >> /etc/inittab <<'EOF'
T0:23:respawn:/sbin/getty -L ttyS0 115200 xterm
T4:23:respawn:/sbin/getty -L ttyS4 115200 xterm
EOF

# our fstab is fonky
#cat > /etc/fstab <<'EOF'
#/dev/sda1 / ext4 errors=remount-ro 0 1
#EOF

# log packages
wget http://KICK_HOST/kickstarts/package_postback.sh
bash package_postback.sh CentOS_7_Teeth_Hadoop_Ambari

/usr/bin/systemctl disable NetworkManager.service

# set rackspace mirrors
#sed -i 's%#baseurl.*%baseurl=http://mirror.rackspace.com/epel/7/x86_64/%g' /etc/yum.repos.d/epel.repo
#sed -i 's/mirror.centos.org/mirror.rackspace.com/g' /etc/yum.repos.d/CentOS-Base.repo
#sed -i '/#baseurl/s/# *//' /etc/yum.repos.d/CentOS-Base.repo
#sed -i '/baseurl/s/# *//' /etc/yum.repos.d/epel.repo
#sed -i '/mirrorlist/s/^/#/' /etc/yum.repos.d/CentOS-Base.repo
#sed -i '/mirrorlist/s/^/#/' /etc/yum.repos.d/epel.repo

wget http://KICK_HOST/kickstarts/CentOS_7_Teeth_Hadoop_post_ambari.sh
chmod +x CentOS_7_Teeth_Hadoop_post_ambari.sh
bash -x CentOS_7_Teeth_Hadoop_post_ambari.sh

# clean up
passwd -d root
passwd -l root
yum clean all
truncate -c -s 0 /var/log/yum.log
echo "" > /etc/machine-id
rm -f /root/anaconda-ks.cfg
rm -f /etc/ssh/ssh_host_*
echo "" > /etc/resolv.conf
rm -f /root/.bash_history
rm -f /root/.nano_history
rm -f /root/.lesshst
rm -f /root/.ssh/known_hosts
rm -rf /tmp/tmp
rm -rf /var/var/
for k in $(find /var/log -type f); do echo > $k; done
for k in $(find /tmp -type f); do rm -f $k; done
# watch these lines, causing kick problems
#for k in $(find /root -type f \ ( ! -iname ".*" \)); do rm -f $k; done
rm -f /etc/sysconfig/network-scripts/ifcfg-ens3

%end
