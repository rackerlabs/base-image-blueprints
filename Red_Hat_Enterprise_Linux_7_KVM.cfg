# Install, not upgrade
install
cmdline

# Install from a friendly mirror and add updates
#url --url=http://intra.mirror.rackspace.com/kickstart/rhel-x86_64-server-6/
cdrom
repo --name=base --baseurl=http://intra.mirror.rackspace.com/kickstart/rhel-x86_64-server-7/
repo --name=optional --baseurl=http://intra.mirror.rackspace.com/kickstart/rhel-x86_64-server-optional-7/
repo --name=epel --baseurl=http://mirror.rackspace.com/epel/7/x86_64/

# Language and keyboard setup
lang en_US.UTF-8
keyboard us

# Configure DHCP networking w/optional IPv6, firewall on
network --onboot yes --device eth0 --bootproto dhcp --ipv6 auto --hostname localhost
firewall --service=ssh

# Set timezone
timezone --utc Etc/UTC

# Authentication
rootpw --plaintext lockedinpost
authconfig --enableshadow --passalgo=sha512

# SELinux
selinux --permissive

# Services running at boot
services --enabled network,sshd,rc-local,spice-vdagentd
services --disabled sendmail,NetworkManager-wait-online,NetworkManager

# Disable anything graphical
skipx
text

# Setup the disk
zerombr
clearpart --all --initlabel
#part biosboot --size=1
part / --fstype=ext4 --grow --size=1024
bootloader --location=mbr --boot-drive=vda --timeout=1 --append="root=/dev/vda1 console=tty0 console=ttyS0,9600 nofb nomodereset"

# Shutdown when the kickstart is done
shutdown

# Minimal package set
%packages 
@base
kernel
rsync
tar
wget
yum-rhn-plugin
rhn-client-tools
rhn-setup
gdisk
curl
epel-release
cloud-init
cloud-utils
cloud-utils-growpart
xorg-x11-drv-qxl
xorg-x11-server-utils
spice-vdagent
qemu-guest-agent
qemu-kvm
gcc
python-pip
python-devel

%end

%post --log=/var/log/post_install.log
# setup systemd to boot to the right runlevel
echo -n "Setting default runlevel to multiuser text mode"
systemctl set-default multi-user.target

# If you want to remove rsyslog and just use journald, remove this!
echo -n "Disabling persistent journal"
rmdir /var/log/journal/ 

# this is installed by default but we don't need it in virt
echo "Removing linux-firmware package."
yum -C -y remove linux-firmware

# Non-firewalld-firewall
echo -n "Writing static firewall"
cat <<EOF > /etc/sysconfig/iptables
# Simple static firewall loaded by iptables.service. Replace
# this with your own custom rules, run lokkit, or switch to 
# shorewall or firewalld as your needs dictate.
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
-A INPUT -p icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -m conntrack --ctstate NEW -m tcp -p tcp --dport 22 -j ACCEPT
-A INPUT -j REJECT --reject-with icmp-host-prohibited
-A FORWARD -j REJECT --reject-with icmp-host-prohibited
COMMIT
EOF

echo -n "Getty fixes"
# although we want console output going to the serial console, we don't
# actually have the opportunity to login there. FIX.
# we don't really need to auto-spawn _any_ gettys.
sed -i '/^#NAutoVTs=.*/ a\
NAutoVTs=0' /etc/systemd/logind.conf

echo -n "Network fixes"
# initscripts don't like this file to be missing.
cat > /etc/sysconfig/network << EOF
NETWORKING=yes
NOZEROCONF=yes
EOF

# For cloud images, 'eth0' _is_ the predictable device name, since
# we don't want to be tied to specific virtual (!) hardware
ln -sf /dev/null /etc/udev/rules.d/80-net-name-slot.rules
ln -sf /dev/null /etc/udev/rules.d/75-persistent-net-generator.rules
ln -sf /dev/null /etc/udev/rules.d/70-persistent-net.rules

# simple eth0 config, again not hard-coded to the build hardware
cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << EOF
DEVICE="eth0"
BOOTPROTO="dhcp"
ONBOOT="yes"
TYPE="Ethernet"
EOF

# generic localhost names
cat > /etc/hosts << EOF
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
EOF

# Because memory is scarce resource in most cloud/virt environments,
# and because this impedes forensics, we are differing from the Fedora
# default of having /tmp on tmpfs.
echo "Disabling tmpfs for /tmp."
/usr/bin/systemctl mask tmp.mount

# tmp tmp
mkdir /tmp/tmp
cd /tmp/tmp

# set some stuff
echo 'net.ipv4.conf.eth0.arp_notify = 1' >> /etc/sysctl.conf
echo 'vm.swappiness = 0' >> /etc/sysctl.conf

# our fstab is fonky
#cat > /etc/fstab <<'EOF'
#/dev/sda1		/                       ext4     defaults,noatime 1 1
#EOF

# set rackspace mirrors
#sed -i 's%#baseurl.*%baseurl=http://mirror.rackspace.com/epel/7/x86_64/%g' /etc/yum.repos.d/epel.repo
#sed -i '/mirrorlist/s/^/#/' /etc/yum.repos.d/epel.repo
#sed -i '/baseurl/s/# *//' /etc/yum.repos.d/epel.repo

cat >> /etc/yum.repos.d/rhel-source.repo <<'EOF'
[rhel-source]
name=Red Hat Enterprise Linux $releasever - $basearch - Source
bashurl=http://intra.mirror.rackspace.com/kickstart/rhel-x86_64-server-7/
enabled=1
gpgcheck=0
EOF

# our cloud-init config
cat > /etc/cloud/cloud.cfg.d/10_rackspace.cfg <<'EOF'
disable_root: False
ssh_pwauth: True
ssh_deletekeys: False
resize_rootfs: noblock
growpart:
  mode: auto
  devices: ['/']
system_info:
  distro: rhel
cloud_config_modules:
 - disk_setup
 - mounts
 - ssh-import-id
 - locale
 - set-passwords
 - package-update-upgrade-install
 - landscape
 - timezone
 - puppet
 - chef
 - salt-minion
 - mcollective
 - disable-ec2-metadata
 - runcmd
 - byobu
EOF

# update all
yum -y update

# make sure repos are empty for rhel
for k in $(find /etc/yum.repos.d -type f\( ! -name "*epel*" \)); do rm -f $k; done

# force grub to use generic disk labels, bootloader above does not do this
#sed -i 's%root=.*%root=/dev/sda1%g' /boot/grub/grub.conf

# keep grub2 from using UUIDs and regenerate config
echo 'GRUB_DISABLE_LINUX_UUID="true"' >> /etc/default/grub
sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT.*/GRUB_CMDLINE_LINUX_DEFAULT="root=/dev/vda1 console=tty0 console=ttyS0,9600 nofb nomodereset"/g' /etc/default/grub
grub2-mkconfig -o /boot/grub2/grub.cfg

# package need for our RHN registration to work
wget http://dfw.rhn.rackspace.com/pub/rhn-org-trusted-ssl-cert-1.0-1.noarch.rpm
rpm -Uvh rhn-org-trusted-ssl-cert*

pip install heat-cfntools

# log packages
wget http://KICK_HOST/kickstarts/package_postback.sh
bash package_postback.sh Red_Hat_Enterprise_Linux_7_KVM

# clean up
passwd -d root
passwd -l root
yum clean all
truncate -c -s 0 /var/log/yum.log
echo "" > /etc/machine-id
rm -f /root/anaconda-ks.cfg
rm -f /etc/ssh/ssh_host_*
rm -f /etc/resolv.conf
rm -f /root/.bash_history
rm -f /root/.nano_history
rm -f /root/.lesshst
rm -f /root/.ssh/known_hosts
rm -rf /tmp/tmp
rm -f /etc/yum.repos.d/rhel-source.repo
for k in $(find /var/log -type f); do echo > $k; done
for k in $(find /tmp -type f); do rm -f $k; done
# watch these lines, causing kick problems
for k in $(find /root -type f \ ( ! -iname ".*" \)); do rm -f $k; done

%end
