# some bits borrowed verbatim from here
# https://git.fedorahosted.org/cgit/cloud-kickstarts.git/tree/generic
# thanks Fedora!

%pre --log=/tmp/log
#!/bin/bash
dd if=/dev/zero of=/dev/xvda bs=512 count=1
parted -s /dev/xvda mklabel msdos
partprobe
%end

# Install, not upgrade
install
#cmdline

# Install from a friendly mirror and add updates
#url --url=http://dl.fedoraproject.org/pub/fedora/linux/releases/22/Server/x86_64/os/
#repo --name=fedora --baseurl=http://dl.fedoraproject.org/pub/fedora/linux/releases/22/Everything/x86_64/os/

url --url=http://mirror.rackspace.com/fedora/releases/23/Server/x86_64/os/
repo --name=fedora --baseurl=http://mirror.rackspace.com/fedora/releases/23/Everything/x86_64/os/

#url --url=http://dl.fedoraproject.org/pub/fedora/linux/releases/22/Server/x86_64/os/
#url --url=http://dl.fedoraproject.org/pub/fedora/linux/development/22/x86_64/os/
#
#repo --name=fedora --baseurl=http://dl.fedoraproject.org/pub/fedora/linux/releases/22/Everything/x86_64/os/
#repo --name=fedora-server --baseurl=http://dl.fedoraproject.org/pub/fedora/linux/releases/22/Server/x86_64/os/
#
#repo --name=fedora --baseurl=http://dl.fedoraproject.org/pub/fedora/linux/development/22/x86_64/os/
#repo --name=fedora --baseurl=http://dl.fedoraproject.org/pub/fedora/linux/updates/22/x86_64/

# Language and keyboard setup
lang en_US.UTF-8
keyboard us

# Configure DHCP networking w/optional IPv6, firewall on
network --onboot yes --bootproto dhcp --ipv6 auto --hostname localhost --device ens3 
firewall --service=ssh

# Set timezone
timezone --utc Etc/UTC

# Authentication
rootpw --plaintext novaagentneedsunlockedrootaccountsowedeletepasswordinpost
authconfig --enableshadow --passalgo=sha512

# SELinux
selinux --permissive

# Services running at boot
services --enabled network,sshd
services --disabled sendmail,NetworkManager

# Disable anything graphical
skipx
text

# Setup the disk
zerombr
clearpart --all --initlabel
part / --fstype=ext4 --grow --size=1024 --asprimary
#bootloader --location=mbr --boot-drive=sda --timeout=1 --append="root=/dev/sda1 console=ttyS4,115200n8 8250.nr_uarts=5 modprobe.blacklist=mei_me net.ifnames=0 biosdevname=0" --extlinux
# extlinux bootloader is done manually in %post so that future kernel updates write the conf correctly
# using the extlinux option from anaconda with that custom in %post breaks booting
bootloader --disabled

# Shutdown when the kickstart is done
shutdown --eject

# Minimal package set
%packages --excludedocs
#--nobase
@core
authconfig
kernel
grubby
cloud-init
cloud-utils
syslinux-extlinux 
firewalld
rsync
tar
wget
curl
rsyslog
which
yum-plugin-versionlock
-dracut-config-rescue
-plymouth
-NetworkManager
-iprutils
mdadm

%end

%post --nochroot
cat >> /etc/resolv.conf <<'EOF'
nameserver 8.8.8.8
EOF
cp /etc/resolv.conf /mnt/sysimage/etc/resolv.conf
%end

%post --erroronfail
exec < /dev/tty3 > /dev/tty3
chvt 3
echo
echo "################################"
echo "# Running Post Configuration   #"
echo "################################"
(
# set bootable

# update all
yum -y update
yum -y upgrade

parted -s /dev/sda set 1 boot on
e2label /dev/sda1 root

# tmp tmp
mkdir /tmp/tmp
cd /tmp/tmp

# setup systemd to boot to the right runlevel
echo -n "Setting default runlevel to multiuser text mode"
rm -f /etc/systemd/system/default.target
ln -s /lib/systemd/system/multi-user.target /etc/systemd/system/default.target

# If you want to remove rsyslog and just use journald, remove this!
echo -n "Disabling persistent journal"
rmdir /var/log/journal/ 

echo -n "Network fixes"
# initscripts don't like this file to be missing.
cat > /etc/sysconfig/network << EOF
NETWORKING=yes
NOZEROCONF=yes
EOF

# fix dns
echo "dns=none" >> /etc/NetworkManager/NetworkManager.conf

# For cloud images, 'eth0' _is_ the predictable device name, since
# we don't want to be tied to specific virtual (!) hardware
#rm -f /etc/udev/rules.d/70*
#ln -s /dev/null /etc/udev/rules.d/80-net-name-slot.rules
echo -n > /etc/udev/rules.d/70-persistent-net.rules
ln -s /dev/null /etc/udev/rules.d/75-persistent-net-generator.rules

mkdir /etc/systemd/network
# OMv1
cat > /etc/systemd/network/10-eth.link <<'EOF'
[Match]
Path=pci-0000:03:00.0-*

[Link]
Name=eth0
EOF
cat > /etc/systemd/network/11-eth.link <<'EOF'
[Match]
Path=pci-0000:03:00.1-*

[Link]
Name=eth1
EOF

# OMv2
cat > /etc/systemd/network/12-eth.link <<'EOF'
[Match]
Path=pci-0000:08:00.0-*

[Link]
Name=eth0
EOF
cat > /etc/systemd/network/13-eth.link <<'EOF'
[Match]
Path=pci-0000:08:00.1-*

[Link]
Name=eth1
EOF

# generic localhost names
cat > /etc/hosts << EOF
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
EOF

# install cloud-init dependencies
pip install argparse configobj jinja2 jsonpatch prettytable pyserial pyyaml oauth six
# custom cloud-init rpm
wget http://KICK_HOST/cloud-init/cloud-init-0.7.7-el7.fc22.noarch.rpm
#wget http://7b52f5445f1d047c988b-5b9b71e9a69b2db171149d34296914b6.r70.cf2.rackcdn.com/cloud-init-0.7.5-14rackspace.x86_64.rpm
rpm -Uvh --nodeps cloud*.rpm
yum versionlock add cloud-init
systemctl enable cloud-init-local
systemctl enable cloud-init
systemctl enable cloud-config
systemctl enable cloud-final

# temporary yum to dnf workaround
sed -i 's%cmd.append("-t")%#cmd.append("-t")%' /usr/lib/python2.7/site-packages/cloudinit/distros/rhel.py
sed -i 's%cmd.append("-t")%#cmd.append("-t")%' /usr/lib/python3.4/site-packages/cloudinit/distros/rhel.py

# our cloud-init config
cat > /etc/cloud/cloud.cfg.d/10_rackspace.cfg <<'EOF'
datasource_list: [ ConfigDrive, None ]
disable_root: False
ssh_pwauth: False
ssh_deletekeys: False
resize_rootfs: noblock
manage_etc_hosts: localhost
growpart:
  mode: auto
  devices: ['/']
system_info:
  distro: fedora
  default_user:
    name: root
    lock_passwd: True

cloud_config_modules:
 - disk_setup
 - ssh-import-id
 - locale
 - set-passwords
 - package-update-upgrade-install
 - yum-add-repo
 - timezone
 - puppet
 - chef
 - salt-minion
 - mcollective
 - disable-ec2-metadata
 - runcmd
 - byobu

cloud_init_modules:
 - migrator
 - bootcmd
 - write-files
 - growpart
 - resizefs
 - set_hostname
 - update_hostname
 - update_etc_hosts
 - rsyslog
 - users-groups
 - ssh
EOF

# Cloud init logging config fix for verbose
sed -i 's/ - \[ \*log_base, \*log_syslog ]/# - \[ \*log_base, \*log_syslog ]/g' /etc/cloud/cloud.cfg.d/05_logging.cfg

# set some stuff
#echo 'net.ipv4.conf.eth0.arp_notify = 1' >> /etc/sysctl.conf
#echo 'vm.swappiness = 0' >> /etc/sysctl.conf

cat >> /etc/sysctl.conf <<'EOF'
net.ipv4.tcp_rmem = 4096 87380 33554432
net.ipv4.tcp_wmem = 4096 65536 33554432
net.core.rmem_max = 33554432
net.core.wmem_max = 33554432
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_timestamps = 1
net.ipv4.tcp_sack = 1
vm.dirty_ratio=5
EOF

# our fstab is fonky
cat > /etc/fstab <<'EOF'
LABEL=root / ext4 errors=remount-ro,noatime 0 1
EOF

# set rackspace mirrors
#sed -i 's%download.fedoraproject.org/pub%mirror.rackspace.com%g' /etc/yum.repos.d/fedora.repo
#sed -i 's%download.fedoraproject.org/pub%mirror.rackspace.com%g' /etc/yum.repos.d/fedora-updates.repo
#sed -i 's%download.fedoraproject.org/pub%mirror.rackspace.com%g' /etc/yum.repos.d/fedora-updates-testing.repo
#sed -i '%/linux%d' /etc/yum.repos.d/fedora.repo
#sed -i '%/linux%d' /etc/yum.repos.d/fedora-updates.repo
#sed -i '%/linux%d' /etc/yum.repos.d/fedora-updates-testing.repo
#sed -i '/mirrorlist/s/^/#/' /etc/yum.repos.d/fedora.repo
#sed -i '/mirrorlist/s/^/#/' /etc/yum.repos.d/fedora-updates.repo
#sed -i '/mirrorlist/s/^/#/' /etc/yum.repos.d/fedora-updates-testing.repo
#sed -i 's/#baseurl/baseurl/g' /etc/yum.repos.d/fedora.repo
#sed -i 's/#baseurl/baseurl/g' /etc/yum.repos.d/fedora-updates.repo
#sed -i 's/#baseurl/baseurl/g' /etc/yum.repos.d/fedora-updates-testing.repo

cat > /etc/rc.d/rc.local <<'EOF'
#!/usr/bin/sh
sleep 20
/etc/init.d/network restart
exit 0
EOF
chmod +x /etc/rc.d/rc.local
systemctl enable rc-local.service
systemctl disable NetworkManager.service

# disable acpi soft-off
chkconfig --del acpid
systemctl disable acpid.service

# make double sure grub/extlinux are happy
# remove any grub entries and
# manually create extlinux file
dd if=/usr/share/syslinux/mbr.bin of=/dev/sda bs=512 count=1
extlinux --install /boot
rm -rf /boot/grub*
version=$(rpm -q kernel --queryformat='%{VERSION}-%{RELEASE}.%{ARCH}\n' | tail -n 1)
cat > /boot/extlinux.conf <<EOF
TIMEOUT 1
default linux

LABEL linux
      KERNEL /boot/vmlinuz-$version
      APPEND root=LABEL=root net.ifnames=0 biosdevname=0 rd.fstab=no modprobe.blacklist=mei_me rd.auto=1
      initrd /boot/initramfs-$version.img
EOF
rm -f /etc/extlinux.conf
ln -s /boot/extlinux.conf /etc/extlinux.conf

#      APPEND root=/dev/sda1 console=ttyS4,115200n8 8250.nr_uarts=5 modprobe.blacklist=mei_me

# another teeth specific
cat > /etc/modules-load.d/bonding.conf <<'EOF'
bonding
8021q
EOF

echo 'add_dracutmodules+="mdraid"' >> /etc/dracut.conf

dracut --regenerate-all --force

sed -i 's/WARNING/DEBUG/g' /etc/cloud/cloud.cfg.d/05_logging.cfg

# disable auto fsck on boot
cat > /etc/sysconfig/autofsck << EOF
AUTOFSCK_DEF_CHECK=yes
PROMPT=no
AUTOFSCK_OPT="-y"
AUTOFSCK_TIMEOUT=10
EOF

# log packages
wget http://KICK_HOST/kickstarts/package_postback.sh
bash package_postback.sh Fedora_23_Teeth
rm -rf /root/tmp
echo "done"

# clean up
rm -f /etc/sysconfig/network-scripts/ifcfg-ens3
passwd -d root
passwd -l root
yum clean all
truncate -c -s 0 /var/log/yum.log
echo "" > /etc/machine-id
rm -f /root/anaconda-ks.cfg
rm -f /etc/ssh/ssh_host_*
echo "" > /etc/resolv.conf
rm -f /root/.bash_history
rm -f /root/.nano_history
rm -f /root/.lesshst
rm -f /root/.ssh/known_hosts
rm -rf /tmp/tmp
for k in $(find /var/log -type f); do echo > $k; done
for k in $(find /tmp -type f); do rm -f $k; done
for k in $(find /root -type f \( ! -iname ".*" \)); do rm -f $k; done
) 2>&1 | /usr/bin/tee /var/log/post_install_chvt.log
chvt 1
%end
