# Install, not upgrade
install
cmdline

# Install from a friendly mirror and add updates
#url --url=http://intra.mirror.rackspace.com/kickstart/rhel-x86_64-server-5/
cdrom
#repo --name=base --baseurl=http://intra.mirror.rackspace.com/kickstart/rhel-x86_64-server-5/
repo --name=epel --baseurl=http://mirror.rackspace.com/epel/5/x86_64/

# skip entering license key
key --skip

# Language and keyboard setup
lang en_US.UTF-8
keyboard us

# Configure DHCP networking w/optional IPv6, firewall on
network --onboot yes --device eth0 --bootproto dhcp

# Set timezone
timezone --utc Etc/UTC

# Authentication
rootpw novaagentneedsunlockedrootaccountsowedeletepasswordinpost
authconfig --enableshadow --passalgo=sha512

# SELinux
selinux --disabled

# Services running at boot
services --enabled network,sshd
services --disabled sendmail

# Disable anything graphical
#skipx
text

# Setup the disk
zerombr
clearpart --all --initlabel
part / --fstype=ext3 --grow --size=1024 --asprimary
bootloader --location=mbr  --append="console=hvc0"

# Shutdown when the kickstart is done
#shutdown
#reboot
poweroff

# Minimal package set
%packages --excludedocs --nobase
@core
kernel-xen
grub
rsync
tar
wget
yum
openssh-clients
openssh-server
#cloud-init
curl
rhn-client-tools
yum-rhn-plugin
rhn-setup
rhn-check
sudo
epel-release

%post --erroronfail

cat >> /etc/modprobe.d/blacklist <<EOF
# disable non virtualized network modules that would load anyway
8139cp
8139too
e1000
EOF

# this is installed by default but we don't need it in virt
echo "Removing linux-firmware package."
yum -C -y remove linux-firmware

# Non-firewalld-firewall
echo -n "Writing static firewall"
cat > /etc/sysconfig/iptables <<EOF
# Simple static firewall loaded by iptables.service. Replace
# this with your own custom rules, run lokkit, or switch to 
# shorewall or firewalld as your needs dictate.
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
-A INPUT -p icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -m conntrack --ctstate NEW -m tcp -p tcp --dport 22 -j ACCEPT
-A INPUT -j REJECT --reject-with icmp-host-prohibited
-A FORWARD -j REJECT --reject-with icmp-host-prohibited
COMMIT
EOF

# ip6tables config
cat > /etc/sysconfig/ip6tables <<'EOF'
# Simple static firewall loaded by iptables.service. Replace
# this with your own custom rules, run lokkit, or switch to 
# shorewall or firewalld as your needs dictate.
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -i lo -j ACCEPT
-A INPUT -p ipv6-icmp -j ACCEPT
-A INPUT -p udp -m udp --dport 32768:61000 -j ACCEPT
-A INPUT -p tcp -m tcp --dport 32768:61000 ! --syn -j ACCEPT
-A INPUT -m tcp -p tcp --dport 22 -j ACCEPT
-A INPUT -j REJECT --reject-with icmp6-adm-prohibited
-A FORWARD -j REJECT --reject-with icmp6-adm-prohibited
COMMIT
EOF

#echo -n "Network fixes"
# initscripts don't like this file to be missing.
cat > /etc/sysconfig/network << EOF
NETWORKING=yes
NOZEROCONF=yes
EOF

# For cloud images, 'eth0' _is_ the predictable device name, since
# we don't want to be tied to specific virtual (!) hardware
echo -n > /etc/udev/rules.d/70-persistent-net.rules
echo -n > /lib/udev/rules.d/75-persistent-net-generator.rules
ln -s /dev/null /etc/udev/rules.d/80-net-name-slot.rules

# simple eth0 config, again not hard-coded to the build hardware
cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << EOF
DEVICE="eth0"
BOOTPROTO="static"
ONBOOT="yes"
TYPE="Ethernet"
EOF

# generic localhost names
cat > /etc/hosts << EOF
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
EOF

# tmp guest tools
mkdir /tmp/tools-install
cd /tmp/tools-install

# install xen tools
wget http://ce3598b91333d7474379-b85ce4d8c2253d3876bef92f62a263f8.r84.cf5.rackcdn.com/xe-guest-utilities-6.1.0-1037.x86_64.rpm -O /tmp/tools-install/xe-guest-utilities.rpm
wget http://ce3598b91333d7474379-b85ce4d8c2253d3876bef92f62a263f8.r84.cf5.rackcdn.com/xe-guest-utilities-xenstore-6.1.0-1037.x86_64.rpm -O /tmp/tools-install/xe-guest-utilities-xenstore.rpm
rpm -Uhv /tmp/tools-install/xe-guest-utilities*.rpm

# install nova-agent
wget https://github.com/carlwgeorge/nova-agent-rpm/releases/download/1.39.1-2/nova-agent-1.39.1-2.el5.x86_64.rpm -O /tmp/tools-install/nova-agent.rpm
rpm -U /tmp/tools-install/nova-agent.rpm

# set some stuff
echo 'net.ipv4.conf.eth0.arp_notify = 1' >> /etc/sysctl.conf
echo 'vm.swappiness = 0' >> /etc/sysctl.conf

# our fstab is fonky
cat > /etc/fstab <<'EOF'
# Accessible filesystems, by reference, are maintained under '/dev/disk'
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info
#
/dev/xvda1		/                       ext3    defaults,noatime 1 1
tmpfs                   /dev/shm                tmpfs   defaults        0 0
devpts                  /dev/pts                devpts  gid=5,mode=620  0 0
sysfs                   /sys                    sysfs   defaults        0 0
proc                    /proc                   proc    defaults        0 0
#/dev/xvdc1		none			swap	sw		0 0
EOF

# set rackspace mirrors
sed -i 's%#baseurl.*%baseurl=http://mirror.rackspace.com/epel/5/x86_64/%g' /etc/yum.repos.d/epel.repo
sed -i '/mirrorlist/s/^/#/' /etc/yum.repos.d/epel.repo
sed -i '/baseurl/s/# *//' /etc/yum.repos.d/epel.repo

# update all
yum -y update

# create a proper menu.lst now that we've updated
version=$(rpm -q kernel-xen --queryformat='%{VERSION}-%{RELEASE}xen\n' | tail -n 1)
#version=$(rpm -q kernel --queryformat='%{VERSION}-%{RELEASE}\n' | tail -n 1)
cat > /boot/grub/grub.conf <<EOF
default=0
timeout=5
	title Red Hat Enterprise Linux ($version)
	root (hd0)
	kernel /boot/vmlinuz-$version ro root=/dev/xvda1 console=hvc0 quiet
	initrd /boot/initrd-$version.img
EOF
# remove and rebuild initrd for xen
rm /boot/initrd-$version.img
mkinitrd -v --with=xenblk --with=xennet --preload=xenblk --preload=xennet --omit-scsi-modules --omit-raid-modules /boot/initrd-$version.img $version

# make sure repos are empty for rhel
find /etc/yum.repos.d -type f ! -name "*epel*" -delete

# force grub to use generic disk labels, bootloader above does not do this
sed -i 's%root=.*%root=/dev/xvda1%g' /boot/grub/grub.conf

# package need for our RHN registration to work
wget http://dfw.rhn.rackspace.com/pub/rhn-org-trusted-ssl-cert-1.0-1.noarch.rpm
rpm -Uvh rhn-org-trusted-ssl-cert*
mkdir -p /etc/sysconfig/rhn
touch /etc/sysconfig/rhn/up2date

# log packages
wget http://KICK_HOST/kickstarts/package_postback.sh
bash package_postback.sh Red_Hat_Enterprise_Linux_5

# clean up
cd /
passwd -d root
yum clean all
rm -f /root/anaconda-ks.cfg
rm -f /etc/ssh/ssh_host_*
rm -f /etc/resolv.conf
rm -f /root/.bash_history
rm -f /root/.nano_history
rm -f /root/.lesshst
rm -f /root/.ssh/known_hosts
rm -rf /tmp/tools-install
find /var/log -type f -exec cp -f /dev/null {} \;
find /tmp -type f -delete
find /root -type f ! -iname ".*" -delete
