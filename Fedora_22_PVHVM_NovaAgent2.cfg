# some bits borrowed verbatim from here
# https://git.fedorahosted.org/cgit/cloud-kickstarts.git/tree/generic
# thanks Fedora!

# Install, not upgrade
install
cmdline

# Install from a friendly mirror and add updates
#url --url=http://dl.fedoraproject.org/pub/fedora/linux/releases/22/Server/x86_64/os/
#repo --name=fedora --baseurl=http://dl.fedoraproject.org/pub/fedora/linux/releases/22/Everything/x86_64/os/
#
url --url=http://mirror.rackspace.com/fedora/releases/22/Server/x86_64/os/
repo --name=fedora --baseurl=http://mirror.rackspace.com/fedora/releases/22/Everything/x86_64/os/


# Language and keyboard setup
lang en_US.UTF-8
keyboard us

# Configure DHCP networking w/optional IPv6, firewall on
network --onboot yes --device eth0 --bootproto dhcp --ipv6 auto --hostname localhost
firewall --service=ssh

# Set timezone
timezone --utc Etc/UTC

# Authentication
rootpw --plaintext novaagentneedsunlockedrootaccountsowedeletepasswordinpost
authconfig --enableshadow --passalgo=sha512

# SELinux
selinux --permissive

# Services running at boot
services --enabled network,sshd
services --disabled sendmail

# Disable anything graphical
skipx
#text

# Setup the disk
zerombr
clearpart --all --initlabel
part / --fstype=ext4 --grow --size=1024 --asprimary
#bootloader --timeout=1 --append="console=ttyS0,115200n8 console=hvc0 console=tty0" --extlinux
# extlinux bootloader is done manually in %post so that future kernel updates write the conf correctly
# using the extlinux option from anaconda with that custom in %post breaks booting
bootloader --disabled

# Shutdown when the kickstart is done
shutdown --eject

# Minimal package set
%packages --excludedocs --nobase
@core
kernel
grubby
cloud-init
cloud-utils

# We need this image to be portable; also, rescue mode isn't useful here.
dracut-config-generic
-dracut-config-rescue

# Not needed with pv-grub (as in EC2), and pulled in automatically
# by anaconda, but appliance-creator needs the hint
syslinux-extlinux 

# Needed initially, but removed below.
# update: not removed below 
firewalld

# extras
rsync
tar
wget
curl
which

# Some things from @core we can do without in a minimal install
-biosdevname
-plymouth
-NetworkManager
-iprutils

# really, no thanks grub2
-grub2-tools
-grub2

%end

%post --erroronfail

# set bootable
parted -s /dev/xvda set 1 boot on

# setup systemd to boot to the right runlevel
systemctl set-default multi-user.target

# If you want to remove rsyslog and just use journald, remove this!
rmdir /var/log/journal/ 

# this is installed by default but we don't need it in virt
yum -C -y remove linux-firmware

# initscripts don't like this file to be missing.
cat > /etc/sysconfig/network << EOF
NETWORKING=yes
NOZEROCONF=yes
EOF

# For cloud images, 'eth0' _is_ the predictable device name, since
# we don't want to be tied to specific virtual (!) hardware
rm -f /etc/udev/rules.d/70*
ln -s /dev/null /etc/udev/rules.d/80-net-name-slot.rules

# simple eth0 config, again not hard-coded to the build hardware
cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << EOF
DEVICE="eth0"
BOOTPROTO="static"
ONBOOT="yes"
TYPE="Ethernet"
EOF

# generic localhost names
cat > /etc/hosts << EOF
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
EOF

# Because memory is scarce resource in most cloud/virt environments,
# and because this impedes forensics, we are differing from the Fedora
# default of having /tmp on tmpfs.
echo "Disabling tmpfs for /tmp."
systemctl mask tmp.mount

# our cloud-init config
cat > /etc/cloud/cloud.cfg.d/10_rackspace.cfg <<'EOF'
datasource_list: [ ConfigDrive, None ]
manage-resolv-conf: false
disable_root: False
ssh_pwauth: True
ssh_deletekeys: False
resize_rootfs: noblock
EOF

# tmp tmp
mkdir /tmp/tmp
cd /tmp/tmp

# install xen tools
wget http://ce3598b91333d7474379-b85ce4d8c2253d3876bef92f62a263f8.r84.cf5.rackcdn.com/xe-guest-utilities-6.2.0-1120.x86_64.rpm
wget http://ce3598b91333d7474379-b85ce4d8c2253d3876bef92f62a263f8.r84.cf5.rackcdn.com/xe-guest-utilities-xenstore-6.2.0-1120.x86_64.rpm
rpm -Uhv xe-guest-utilities*.rpm

cat > /etc/yum.repos.d/novaagent.repo <<'EOF'
[carlgeorge-nova-agent]
name=Copr repo for nova-agent owned by carlgeorge
baseurl=https://copr-be.cloud.fedoraproject.org/results/carlgeorge/nova-agent/fedora-22-$basearch/
skip_if_unavailable=True
gpgcheck=1
gpgkey=https://copr-be.cloud.fedoraproject.org/results/carlgeorge/nova-agent/pubkey.gpg
enabled=1
enabled_metadata=1
EOF

yum install -y nova-agent
systemctl enable nova-agent

# set some stuff
echo 'net.ipv4.conf.eth0.arp_notify = 1' >> /etc/sysctl.conf
echo 'vm.swappiness = 0' >> /etc/sysctl.conf

cat >> /etc/sysctl.conf <<'EOF'
net.ipv4.tcp_rmem = 4096 87380 33554432
net.ipv4.tcp_wmem = 4096 65536 33554432
net.core.rmem_max = 33554432
net.core.wmem_max = 33554432
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_timestamps = 1
net.ipv4.tcp_sack = 1
EOF

# our fstab is fonky
cat > /etc/fstab <<'EOF'
/dev/xvda1 / ext4 errors=remount-ro,noatime,barrier=0 0 1
#/dev/xvdc1 none swap sw 0 0
EOF

# set rackspace mirrors
#sed -i 's%download.fedoraproject.org/pub%mirror.rackspace.com%g' /etc/yum.repos.d/fedora.repo
#sed -i 's%download.fedoraproject.org/pub%mirror.rackspace.com%g' /etc/yum.repos.d/fedora-updates.repo
#sed -i 's%download.fedoraproject.org/pub%mirror.rackspace.com%g' /etc/yum.repos.d/fedora-updates-testing.repo
#sed -i '%/linux%d' /etc/yum.repos.d/fedora.repo
#sed -i '%/linux%d' /etc/yum.repos.d/fedora-updates.repo
#sed -i '%/linux%d' /etc/yum.repos.d/fedora-updates-testing.repo
#sed -i '/mirrorlist/s/^/#/' /etc/yum.repos.d/fedora.repo
#sed -i '/mirrorlist/s/^/#/' /etc/yum.repos.d/fedora-updates.repo
#sed -i '/mirrorlist/s/^/#/' /etc/yum.repos.d/fedora-updates-testing.repo
#sed -i 's/#baseurl/baseurl/g' /etc/yum.repos.d/fedora.repo
#sed -i 's/#baseurl/baseurl/g' /etc/yum.repos.d/fedora-updates.repo
#sed -i 's/#baseurl/baseurl/g' /etc/yum.repos.d/fedora-updates-testing.repo

# update all
yum -y update
yum -y upgrade

mkdir /etc/systemd/system/cloud-init-local.service.d/
cat > /etc/systemd/system/cloud-init-local.service.d/sleep.conf <<'EOF'
[Service]
ExecStartPre=/usr/bin/sleep 20
EOF

systemctl enable cloud-init-local
systemctl enable cloud-init
systemctl enable cloud-config
systemctl enable cloud-final

# some systemd workarounds
sed -i 's/XenServer Virtual Machine Tools/xe-linux-distribution/g' /etc/init.d/xe-linux-distribution
update-rc.d xe-linux-distribution defaults

chmod +x /etc/rc.d/rc.local
systemctl enable rc-local.service

yum -y install kernel
# make double sure grub/extlinux are happy
# remove any grub entries and
# manually create extlinux file
dd if=/usr/share/syslinux/mbr.bin of=/dev/xvda bs=512 count=1
extlinux --install /boot
rm -rf /boot/grub*
version=$(rpm -q kernel --queryformat='%{VERSION}-%{RELEASE}.%{ARCH}\n' | tail -n 1)
cat > /boot/extlinux.conf <<EOF
TIMEOUT 1
default linux

LABEL linux
      KERNEL /boot/vmlinuz-$version
      APPEND root=/dev/xvda1 console=ttyS0,115200n8 console=hvc0 console=tty0
      initrd /boot/initramfs-$version.img
EOF
rm -f /etc/extlinux.conf
ln -s /boot/extlinux.conf /etc/extlinux.conf

# nova-agent and krb5-libs conflict workaround
#cat > /etc/dnf/protected.d/dnf.conf <<'EOF'
#dnf
#krb5-libs
#nova-agent
#EOF

# log packages
wget http://KICK_HOST/kickstarts/package_postback.sh
bash package_postback.sh Fedora_22_PVHVM_NovaAgent2
rm -rf /root/tmp

# clean up
passwd -d root
yum clean all
truncate -c -s 0 /var/log/yum.log
echo "" > /etc/machine-id
rm -f /root/anaconda-ks.cfg
rm -f /etc/ssh/ssh_host_*
rm -f /etc/resolv.conf
touch /etc/resolv.conf
rm -f /root/.bash_history
rm -f /root/.nano_history
rm -f /root/.lesshst
rm -f /root/.ssh/known_hosts
rm -rf /tmp/tmp
find /var/log -type f -exec tee {} \;
find /tmp -type f -delete
# watch these lines, causing kick problems
find /root -type f \( -not -iname ".*" \) -delete

%end
